package jfcraft.server;

/**
 *
 * @author pquiring
 */

import java.util.*;

import javaforce.*;
import javaforce.awt.*;

import jfcraft.data.*;

public class PanelServer extends javax.swing.JPanel implements ServerInterface {

  /**
   * Creates new form ServerPanel
   */
  public PanelServer(String worldFolder) {
    this.worldFolder = worldFolder;
    initComponents();
    start();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jLabel4 = new javax.swing.JLabel();
    memory = new javax.swing.JTextField();
    avgTick = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    jPanel2 = new javax.swing.JPanel();
    jScrollPane3 = new javax.swing.JScrollPane();
    clients = new javax.swing.JTextArea();
    jPanel3 = new javax.swing.JPanel();
    jScrollPane2 = new javax.swing.JScrollPane();
    log = new javax.swing.JTextArea();
    jLabel1 = new javax.swing.JLabel();
    cmd = new javax.swing.JTextField();

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Stats"));

    jLabel4.setText("Memory:");

    memory.setEditable(false);

    avgTick.setEditable(false);

    jLabel3.setText("Avg Tick:");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(memory))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(avgTick)))
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel4)
          .addComponent(memory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(avgTick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Clients"));

    clients.setColumns(20);
    clients.setRows(5);
    jScrollPane3.setViewportView(clients);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane3)
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
    );

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Log"));

    log.setEditable(false);
    log.setColumns(1);
    log.setRows(1);
    jScrollPane2.setViewportView(log);

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane2)
        .addContainerGap())
    );

    jLabel1.setText("Cmd:");

    cmd.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyTyped(java.awt.event.KeyEvent evt) {
        cmdKeyTyped(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cmd)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        .addGap(6, 6, 6)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(cmd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void cmdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdKeyTyped
    doCmd();
  }//GEN-LAST:event_cmdKeyTyped


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField avgTick;
  private javax.swing.JTextArea clients;
  private javax.swing.JTextField cmd;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JTextArea log;
  private javax.swing.JTextField memory;
  // End of variables declaration//GEN-END:variables

  private String worldFolder;
  private Timer timer;
  private ArrayList<String> fullLog = new ArrayList<String>();

  private void start() {
    Static.setInterface(this);
    Main.server = new Server();
    if (!Main.server.startWorld(worldFolder)) {
      JFAWT.showError("Error:", Main.server.errmsg);
      System.exit(0);
    }
    timer = new Timer();
    timer.schedule(new TimerTask() {
      public void run() {
        update();
      }
    }, 2000, 2000);
  }

  private void update() {
    Runtime rt = Runtime.getRuntime();
    long free = rt.freeMemory() / (1024 * 1024);
    long total = rt.totalMemory() / (1024 * 1024);
    memory.setText("Free=" + free + "MB of " + total + "MB");
    avgTick.setText("" + Static.tick);
  }

  private void doCmd() {
    //TODO
    log("TODO");
    cmd.setText("");
  }

  //ServerInterface

  public void clientAdded(String name) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        clients.setText(Main.server.getClients());
      }
    });
  }

  public void clientDropped(String name) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        clients.setText(Main.server.getClients());
      }
    });
  }

  public void log(String msg) {
    synchronized(fullLog) {
      fullLog.add(msg);
      if (fullLog.size() > 1000) {
        fullLog.remove(0);
      }
    }
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        StringBuilder sb = new StringBuilder();
        synchronized(fullLog) {
          int cnt = fullLog.size();
          for(int a=0;a<cnt;a++) {
            sb.append(fullLog.get(a));
            sb.append("\n");
          }
        }
        log.setText(sb.toString());
      }
    });
  }

  public void ready() {
    Main.server.startNetworking();
  }
}
